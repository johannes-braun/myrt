#version 430 core

layout(local_size_x = 8, local_size_y = 8) in;

layout(binding = 0) uniform sampler2D input_image;
layout(binding = 1, rgba16f) uniform writeonly image2D output_image;

uniform vec4 value;
uniform bool leave_above;

void main()
{
  uvec2 pt = gl_GlobalInvocationID.xy;
  uvec2 image_size = uvec2(textureSize(input_image, 0));
  uint id = pt.y * image_size.x + pt.x;
  if(pt.x > image_size.x || pt.y > image_size.y)
  {
    return;
  }
  vec2 pixel = vec2(pt);
  vec4 color = texelFetch(input_image, ivec2(pt), 0);

  if(leave_above)
  {
    color = mix(color, vec4(0), lessThanEqual(color, value));
  }
  else
  {
    color = mix(color, vec4(0), greaterThanEqual(color, value));
  }

  imageStore(output_image, ivec2(pt), color);
}